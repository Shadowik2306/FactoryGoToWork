// <auto-generated />
using System;
using FactoryDatabaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FactoryDatabaseImplement.Migrations
{
    [DbContext(typeof(FactoryDatabase))]
    [Migration("20230515205932_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Engenier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Engeniers");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Lathe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusyId")
                        .HasColumnType("int");

                    b.Property<string>("LatheName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusyId");

                    b.HasIndex("MasterId");

                    b.ToTable("Lathes");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.LatheBusy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LatheBusies");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.LatheReinforced", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("LatheId")
                        .HasColumnType("int");

                    b.Property<int>("ReinforcedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LatheId");

                    b.HasIndex("ReinforcedId");

                    b.ToTable("LatheReinforcedes");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Masters");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.PlanComponents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanComponents");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.PlanLathe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("LatheId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LatheId");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanLathes");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Reinforced", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EngenierId")
                        .HasColumnType("int");

                    b.Property<string>("ReinforcedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EngenierId");

                    b.ToTable("Reinforceds");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.ReinforcedComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("ReinforcedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ReinforcedId");

                    b.ToTable("ReinforcedComponents");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("ReinforsedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("PlanId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Lathe", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.LatheBusy", null)
                        .WithMany("Lathes")
                        .HasForeignKey("BusyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FactoryDatabaseImplement.Models.Master", null)
                        .WithMany("LatheId")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.LatheReinforced", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.Lathe", "Lathe")
                        .WithMany("Reinforceds")
                        .HasForeignKey("LatheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FactoryDatabaseImplement.Models.Reinforced", "Reinforced")
                        .WithMany()
                        .HasForeignKey("ReinforcedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lathe");

                    b.Navigation("Reinforced");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.PlanComponents", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FactoryDatabaseImplement.Models.Plan", "Plan")
                        .WithMany("Components")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.PlanLathe", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.Lathe", "Lathe")
                        .WithMany()
                        .HasForeignKey("LatheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FactoryDatabaseImplement.Models.Plan", "Plan")
                        .WithMany("Lathes")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lathe");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Reinforced", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.Engenier", null)
                        .WithMany("Reinforceds")
                        .HasForeignKey("EngenierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.ReinforcedComponent", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.Component", "Component")
                        .WithMany("ReinforcedComponents")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FactoryDatabaseImplement.Models.Reinforced", "Reinforced")
                        .WithMany("Components")
                        .HasForeignKey("ReinforcedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Reinforced");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Stage", b =>
                {
                    b.HasOne("FactoryDatabaseImplement.Models.Component", null)
                        .WithMany("Stages")
                        .HasForeignKey("ComponentId");

                    b.HasOne("FactoryDatabaseImplement.Models.Plan", null)
                        .WithMany("Stages")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Component", b =>
                {
                    b.Navigation("ReinforcedComponents");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Engenier", b =>
                {
                    b.Navigation("Reinforceds");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Lathe", b =>
                {
                    b.Navigation("Reinforceds");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.LatheBusy", b =>
                {
                    b.Navigation("Lathes");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Master", b =>
                {
                    b.Navigation("LatheId");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Plan", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Lathes");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("FactoryDatabaseImplement.Models.Reinforced", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
